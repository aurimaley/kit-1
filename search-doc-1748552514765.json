{"searchDocs":[{"title":"Config","type":0,"sectionRef":"#","url":"/kit/api/Config","content":"Config This item only works when running on the client. Client A table of utility functions that can be used to speed up the process of writing repository scripts for client objects.","keywords":"","version":null},{"title":"JumpButton","type":0,"sectionRef":"#","url":"/kit/api/JumpButton","content":"JumpButton This item only works when running on the client. Client A table of utility functions that can be used to speed up the process of writing repository scripts for client objects.","keywords":"","version":null},{"title":"Gui","type":0,"sectionRef":"#","url":"/kit/api/Gui","content":"Gui This item only works when running on the client. Client A table of utility functions that can be used to speed up the process of writing repository scripts for client objects.","keywords":"","version":null},{"title":"ClientObjectManager","type":0,"sectionRef":"#","url":"/kit/api/ClientObjectManager","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ClientObjectManager","url":"/kit/api/ClientObjectManager#functions","content":" ","version":null,"tagName":"h2"},{"title":"LoadClientObjects​","type":1,"pageTitle":"ClientObjectManager","url":"/kit/api/ClientObjectManager#LoadClientObjects","content":"&lt;/&gt; ClientObjectManager:LoadClientObjects( from: Instance, target: Instance, towerRepository: Instance? ) → () Loads the client objects found in from into the target, setting them up and running their respective repository scripts. towerRepository determines where the repository scripts for COs will be retrieved from. If not set, this will default to Framework.Kit.Repository. ","version":null,"tagName":"h3"},{"title":"Lighting","type":0,"sectionRef":"#","url":"/kit/api/Lighting","content":"Lighting This item only works when running on the client. Client A table of utility functions that can be used to speed up the process of writing repository scripts for client objects.","keywords":"","version":null},{"title":"EffectGuiManager","type":0,"sectionRef":"#","url":"/kit/api/EffectGuiManager","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"EffectGuiManager","url":"/kit/api/EffectGuiManager#functions","content":" ","version":null,"tagName":"h2"},{"title":"CreateBoostTimer​","type":1,"pageTitle":"EffectGuiManager","url":"/kit/api/EffectGuiManager#CreateBoostTimer","content":"&lt;/&gt; EffectGuiManager:CreateBoostTimer(boostType: string) → TextLabel  Creates and returns a boost timer label for the given boostType. The color for every type is defined in the BOOST_COLORS table. ","version":null,"tagName":"h3"},{"title":"LightingManager","type":0,"sectionRef":"#","url":"/kit/api/LightingManager","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"LightingManager","url":"/kit/api/LightingManager#functions","content":" ","version":null,"tagName":"h2"},{"title":"ChangeLighting​","type":1,"pageTitle":"LightingManager","url":"/kit/api/LightingManager#ChangeLighting","content":"&lt;/&gt; LightingManager:ChangeLighting(config: _TDefs.LightingConfiguration) → () ","version":null,"tagName":"h3"},{"title":"Types","type":1,"pageTitle":"LightingManager","url":"/kit/api/LightingManager##","content":"","version":null,"tagName":"h3"},{"title":"​","type":1,"pageTitle":"LightingManager","url":"/kit/api/LightingManager#LightingConfiguration","content":"interface LightingConfiguration { Type: string Configuration: Default | {[string]: any} TweenInfo: TweenInfo? UseDefault: string? SetDefault: string? }  Changes the active lighting based on the given config. TODO explain more  ","version":null,"tagName":"h3"},{"title":"ResetLighting​","type":1,"pageTitle":"LightingManager","url":"/kit/api/LightingManager#ResetLighting","content":"&lt;/&gt; LightingManager:ResetLighting() → () Resets all lighting properties back to their default state.  ","version":null,"tagName":"h3"},{"title":"DeregisterPreset​","type":1,"pageTitle":"LightingManager","url":"/kit/api/LightingManager#DeregisterPreset","content":"&lt;/&gt; LightingManager:DeregisterPreset(preset: string) → () Removes the registered preset from the lighting template list. Used when the client object folder unloads. TODO explain more ","version":null,"tagName":"h3"},{"title":"ScopeCommunicator","type":0,"sectionRef":"#","url":"/kit/api/ScopeCommunicator","content":"ScopeCommunicator This item only works when running on the client. Client Scope Communicator","keywords":"","version":null},{"title":"Property","type":0,"sectionRef":"#","url":"/kit/api/Property","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Property","url":"/kit/api/Property#functions","content":" ","version":null,"tagName":"h2"},{"title":"getPropertySafe​","type":1,"pageTitle":"Property","url":"/kit/api/Property#getPropertySafe","content":"shorthand &lt;/&gt; Property.getPropertySafe( instance: any, property: string ) → ( any, boolean ) Safely gets a property of an object. Will return nil if the property does not exist, or if any errors occur.  ","version":null,"tagName":"h3"},{"title":"setPropertySafe​","type":1,"pageTitle":"Property","url":"/kit/api/Property#setPropertySafe","content":"shorthand &lt;/&gt; Property.setPropertySafe( instance: any, property: string, value: any ) → boolean Safely sets a property of an object.  ","version":null,"tagName":"h3"},{"title":"assureValueType​","type":1,"pageTitle":"Property","url":"/kit/api/Property#assureValueType","content":"shorthand &lt;/&gt; Property.assureValueType( value: unknown, default: defaultType ) → defaultType Checks if value and default are of the same type. If not, it will return the default value.  ","version":null,"tagName":"h3"},{"title":"assureConfig​","type":1,"pageTitle":"Property","url":"/kit/api/Property#assureConfig","content":"shorthand &lt;/&gt; Property.assureConfig( instance: Instance, configName: string, default: defaultType ) → defaultType Shorthand for utility.assureValueType(instance:GetAttribute(configName), default) ","version":null,"tagName":"h3"},{"title":"Instance","type":0,"sectionRef":"#","url":"/kit/api/Instance","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Instance","url":"/kit/api/Instance#functions","content":" ","version":null,"tagName":"h2"},{"title":"isPointer​","type":1,"pageTitle":"Instance","url":"/kit/api/Instance#isPointer","content":"&lt;/&gt; Instance.isPointer(object: Instance?) → () Returns whether the object is a module pointer. Module pointers are used for things such as module-based object configurations to help reduce memory usage when requiring them.  ","version":null,"tagName":"h3"},{"title":"getPointer​","type":1,"pageTitle":"Instance","url":"/kit/api/Instance#getPointer","content":"&lt;/&gt; Instance.getPointer(object: Instance?) → Instance? If the given object is a pointer, this function will return it's value. Otherwise, it will just return the object that was passed in. ","version":null,"tagName":"h3"},{"title":"ScopeConstructor","type":0,"sectionRef":"#","url":"/kit/api/ScopeConstructor","content":"ScopeConstructor This item only works when running on the client. Client Scope","keywords":"","version":null},{"title":"ScopeUtil","type":0,"sectionRef":"#","url":"/kit/api/ScopeUtil","content":"ScopeUtil This item only works when running on the client. Client A table of utility functions that can be used to speed up the process of writing repository scripts for client objects.","keywords":"","version":null},{"title":"Table","type":0,"sectionRef":"#","url":"/kit/api/Table","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Table","url":"/kit/api/Table#functions","content":" ","version":null,"tagName":"h2"},{"title":"Copy​","type":1,"pageTitle":"Table","url":"/kit/api/Table#Copy","content":"&lt;/&gt; Table.Copy( item: Arrayofitemstosplice, min: Startingindexofsplice, max: Endingindexofsplice ) → ()  ","version":null,"tagName":"h3"},{"title":"Button Deactivators","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/button-deactivators","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Button Deactivators","url":"/kit/docs/client-objects/button-deactivators#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Button Deactivators","url":"/kit/docs/client-objects/button-deactivators#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Balloons","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/balloons","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Balloons","url":"/kit/docs/client-objects/balloons#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Balloons","url":"/kit/docs/client-objects/balloons#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Beat Blocks","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/beat-blocks","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Beat Blocks","url":"/kit/docs/client-objects/beat-blocks#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Beat Blocks","url":"/kit/docs/client-objects/beat-blocks#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Bounce Pads","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/bounce-pads","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Bounce Pads","url":"/kit/docs/client-objects/bounce-pads#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Bounce Pads","url":"/kit/docs/client-objects/bounce-pads#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Dismounters","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/dismounters","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Dismounters","url":"/kit/docs/client-objects/dismounters#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Dismounters","url":"/kit/docs/client-objects/dismounters#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Attacher","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/Attacher","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Attacher","url":"/kit/docs/client-objects/Attacher#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Attacher","url":"/kit/docs/client-objects/Attacher#configuration","content":"","version":"Next","tagName":"h2"},{"title":"FlipManager","type":0,"sectionRef":"#","url":"/kit/api/FlipManager","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"FlipManager","url":"/kit/api/FlipManager#functions","content":" ","version":null,"tagName":"h2"},{"title":"Flip​","type":1,"pageTitle":"FlipManager","url":"/kit/api/FlipManager#Flip","content":"&lt;/&gt; FlipManager:Flip() → () Performs a corner flip on any flip parts the player is touching. Parts can be marked as flip parts by: Adding a Tag or Instance inside the part called CanFlip Adding a callback on the part with FlipManager:BindToFlip()  ","version":null,"tagName":"h3"},{"title":"BindToFlip​","type":1,"pageTitle":"FlipManager","url":"/kit/api/FlipManager#BindToFlip","content":"&lt;/&gt; FlipManager:BindToFlip( part: BasePart , callback: () → () ) → () Binds the callback function to the part, executing the callback when the player performs a corner flip on it. ","version":null,"tagName":"h3"},{"title":"Emitter","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/emitter","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Emitter","url":"/kit/docs/client-objects/emitter#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Emitter","url":"/kit/docs/client-objects/emitter#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Buttons","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/buttons","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Buttons","url":"/kit/docs/client-objects/buttons#configuration","content":"","version":"Next","tagName":"h2"},{"title":"CharacterManager","type":0,"sectionRef":"#","url":"/kit/api/CharacterManager","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#types","content":" ","version":null,"tagName":"h2"},{"title":"BoostData​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#BoostData","content":"&lt;/&gt; interface BoostData { startTime: number mode: string type: string power: number duration: number timerDecimals: number startTweenInfo: TweenInfo endTweenInfo: TweenInfo }  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#functions","content":" ","version":null,"tagName":"h2"},{"title":"ValidateDamageBrick​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#ValidateDamageBrick","content":"&lt;/&gt; CharacterManager:ValidateDamageBrick(brick: BasePart ) → () Function internally used to validate a damage brick's damage value. This also checks whether the damage brick is deactivated or not.  ","version":null,"tagName":"h3"},{"title":"Damage​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#Damage","content":"&lt;/&gt; CharacterManager:Damage(damage: BasePart | string | number) → () Fires the DamageEvent with the given damage value. damage can be either a number, or a string representing a key in the VALID_DAMAGEBRICKS table.  ","version":null,"tagName":"h3"},{"title":"GetHumanoid​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#GetHumanoid","content":"&lt;/&gt; CharacterManager:GetHumanoid(player: Player ) → Humanoid?  Returns the player's Humanoid if it exists.  ","version":null,"tagName":"h3"},{"title":"StartBoost​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#StartBoost","content":"&lt;/&gt; CharacterManager:StartBoost(boostData: _TDefs.BoostData) → () Starts a boost with the given boost data. If a boost with the given type is already active, the already active boost will be refreshed instead of a new boost being started.  ","version":null,"tagName":"h3"},{"title":"UpdateBoost​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#UpdateBoost","content":"&lt;/&gt; CharacterManager:UpdateBoost( boostData: _TDefs.BoostData, boostEnded: boolean? ) → () Updates the currently active boost with the given type, updating the affected property. If boostEnded is true, the character will return to it's default properties rather than using the boost's power.  ","version":null,"tagName":"h3"},{"title":"RemoveBoost​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#RemoveBoost","content":"&lt;/&gt; CharacterManager:RemoveBoost(boostType: string) → () Ends the currently active boost with the given type.  ","version":null,"tagName":"h3"},{"title":"GetActiveBoosts​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#GetActiveBoosts","content":"&lt;/&gt; CharacterManager:GetActiveBoosts() → {[string]: _TDefs.BoostData?} Returns a table containing the currently active boosts.  ","version":null,"tagName":"h3"},{"title":"ActivateBoostPad​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#ActivateBoostPad","content":"&lt;/&gt; CharacterManager:ActivateBoostPad( boostType: string, power: number ) → () Activates a boost pad with the given boostType and power.  ","version":null,"tagName":"h3"},{"title":"UpdateBoostPad​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#UpdateBoostPad","content":"&lt;/&gt; CharacterManager:UpdateBoostPad( boostType: string, power: number ) → () Updates a boost pad's boost with the given boostType and number, updating the affected property accordingly.  ","version":null,"tagName":"h3"},{"title":"DeactivateBoostPad​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#DeactivateBoostPad","content":"&lt;/&gt; CharacterManager:DeactivateBoostPad(boostType: string) → () Deactivates a boost pad with the given boostType. If a regular booster is currently active, the player will revert to that booster's power. Otherwise, the player will revert to the default power.  ","version":null,"tagName":"h3"},{"title":"GetActiveBoostPads​","type":1,"pageTitle":"CharacterManager","url":"/kit/api/CharacterManager#GetActiveBoostPads","content":"&lt;/&gt; CharacterManager:GetActiveBoostPads() → {[string]: number?} Returns a table containing the currently active boost pads, with the key being the boost's type and the value being the boost's power. ","version":null,"tagName":"h3"},{"title":"Character","type":0,"sectionRef":"#","url":"/kit/api/Character","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Character","url":"/kit/api/Character#functions","content":" ","version":null,"tagName":"h2"},{"title":"getHitbox​","type":1,"pageTitle":"Character","url":"/kit/api/Character#getHitbox","content":"&lt;/&gt; Character.getHitbox( mode: string, params: OverlapParams? ) → {BasePart } Returns a static hitbox attached to the character based on the provided mode. These hitboxes ignore animations and as such should be more consistent. Supported hitbox types: RootPart - HumanoidRootPart only StaticWholeBody - Character's entire body StaticCenter - Character's entire body, excluding arms StaticArms - Arms &amp; torso only There are more hitbox types that include the character's actual limbs, note that these do not ignore animations: WholeBody - All limbs Center - All limbs, excluding the arms  ","version":null,"tagName":"h3"},{"title":"carryPart​","type":1,"pageTitle":"Character","url":"/kit/api/Character#carryPart","content":"&lt;/&gt; Character.carryPart( weldState: boolean, weldTo: BasePart ) → () Makes the character carry the weldTo part, welding it to the character and displaying a carry animation on the character. The carry animation manipulates the character's shoulders directly instead of using an Animation, so it should work everywhere. If weldState is false, the character will stop carrying the part and the carry animation will stop. ","version":null,"tagName":"h3"},{"title":"Functions","type":0,"sectionRef":"#","url":"/kit/api/Functions","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Functions","url":"/kit/api/Functions#functions","content":" ","version":null,"tagName":"h2"},{"title":"generateUID​","type":1,"pageTitle":"Functions","url":"/kit/api/Functions#generateUID","content":"shorthand &lt;/&gt; Functions.generateUID(curlyBraces: boolean?) → string Shorthand for HttpService:GenerateGUID(). utility.generateUID() --&gt; 4BA80F4637244B4BBA957E28B9443DE9   ","version":null,"tagName":"h3"},{"title":"tween​","type":1,"pageTitle":"Functions","url":"/kit/api/Functions#tween","content":"shorthand &lt;/&gt; Functions.tween( instance: Instance, config: number | typeof(Config.TWEEN_CONFIG), goal: {[string]: any}, easingStyle: Enum.EasingStyle?,-- EasingStyle easingDirection: Enum.EasingDirection?,-- EasingDirection ...: any ) → Tween  Simple tween function that handles garbage collection properly. utility.tween(part, 0.5, { Color = Color3.fromRGB(255, 0, 0) })   ","version":null,"tagName":"h3"},{"title":"playSoundFromInstance​","type":1,"pageTitle":"Functions","url":"/kit/api/Functions#playSoundFromInstance","content":"&lt;/&gt; Functions.playSoundFromInstance( instance: Instance, container: Instance, soundName: string ) → Sound?  Plays a sound with the given soundName from the given container at the instance's location.  ","version":null,"tagName":"h3"},{"title":"roundColor​","type":1,"pageTitle":"Functions","url":"/kit/api/Functions#roundColor","content":"shorthand &lt;/&gt; Functions.roundColor(color: Color3 ) → Color3  Rounds the provided color to remedy rounding errors that cause issues on some devices when comparing two Color3 values.  ","version":null,"tagName":"h3"},{"title":"yieldTimeout​","type":1,"pageTitle":"Functions","url":"/kit/api/Functions#yieldTimeout","content":"&lt;/&gt; Functions.yieldTimeout( timeout: number, fn: (A...) → T..., ...: A... ) → T... TODO explain this (IDK lol) ","version":null,"tagName":"h3"},{"title":"Elevators","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/elevators","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Elevators","url":"/kit/docs/client-objects/elevators#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Elevators","url":"/kit/docs/client-objects/elevators#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Moving Platforms","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/moving-platforms","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Moving Platforms","url":"/kit/docs/client-objects/moving-platforms#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Moving Platforms","url":"/kit/docs/client-objects/moving-platforms#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Falling Platforms","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/falling-platforms","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Falling Platforms","url":"/kit/docs/client-objects/falling-platforms#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Falling Platforms","url":"/kit/docs/client-objects/falling-platforms#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Conveyors","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/conveyors","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Conveyors","url":"/kit/docs/client-objects/conveyors#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Conveyors","url":"/kit/docs/client-objects/conveyors#configuration","content":" Name\tDefault Value\tDescriptionSpeed\t10\tThe speed the conveyor will move objects at, measured in studs per second ","version":"Next","tagName":"h2"},{"title":"Jump Boosters","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/jump-boosters","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Jump Boosters","url":"/kit/docs/client-objects/jump-boosters#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Jump Boosters","url":"/kit/docs/client-objects/jump-boosters#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Jump Launchers","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/jump-launcher","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Jump Launchers","url":"/kit/docs/client-objects/jump-launcher#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Jump Launchers","url":"/kit/docs/client-objects/jump-launcher#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Lighting Changers","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/lighting-changers","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Lighting Changers","url":"/kit/docs/client-objects/lighting-changers#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Lighting Changers","url":"/kit/docs/client-objects/lighting-changers#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Keys","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/keys","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Keys","url":"/kit/docs/client-objects/keys#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Keys","url":"/kit/docs/client-objects/keys#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Jump Boost Pads","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/jump-boost-pads","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Jump Boost Pads","url":"/kit/docs/client-objects/jump-boost-pads#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Jump Boost Pads","url":"/kit/docs/client-objects/jump-boost-pads#configuration","content":"","version":"Next","tagName":"h2"},{"title":"One-Way Platforms","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/one-way-platform","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"One-Way Platforms","url":"/kit/docs/client-objects/one-way-platform#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"One-Way Platforms","url":"/kit/docs/client-objects/one-way-platform#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Sequencer","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/sequencer","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Sequencer","url":"/kit/docs/client-objects/sequencer#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Sequencer","url":"/kit/docs/client-objects/sequencer#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Music Zone Editors","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/music-zone-editors","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Music Zone Editors","url":"/kit/docs/client-objects/music-zone-editors#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Music Zone Editors","url":"/kit/docs/client-objects/music-zone-editors#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Swings","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/swings","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Swings","url":"/kit/docs/client-objects/swings#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Swings","url":"/kit/docs/client-objects/swings#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Ziplines","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/ziplines","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Ziplines","url":"/kit/docs/client-objects/ziplines#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Ziplines","url":"/kit/docs/client-objects/ziplines#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Pushboxes","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/pushboxes","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Pushboxes","url":"/kit/docs/client-objects/pushboxes#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Pushboxes","url":"/kit/docs/client-objects/pushboxes#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Speed Boost Pads","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/speed-boost-pads","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Speed Boost Pads","url":"/kit/docs/client-objects/speed-boost-pads#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Speed Boost Pads","url":"/kit/docs/client-objects/speed-boost-pads#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Morphers","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/morphers","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Morphers","url":"/kit/docs/client-objects/morphers#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Morphers","url":"/kit/docs/client-objects/morphers#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Teleporters","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/teleporters","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Teleporters","url":"/kit/docs/client-objects/teleporters#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Teleporters","url":"/kit/docs/client-objects/teleporters#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Speed Booster","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/speed-booster","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Speed Booster","url":"/kit/docs/client-objects/speed-booster#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Speed Booster","url":"/kit/docs/client-objects/speed-booster#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Turrets","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/turrets","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Turrets","url":"/kit/docs/client-objects/turrets#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Turrets","url":"/kit/docs/client-objects/turrets#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Kill Bricks","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/killbricks","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Kill Bricks","url":"/kit/docs/client-objects/killbricks#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Kill Bricks","url":"/kit/docs/client-objects/killbricks#configuration","content":" Below are Tags and their respective damage outputs per touch. Neither damage nor healing bypass ForceField.  Tag\tDamagekills\t5 double\t10 ouch\t20 instakills\tinfinite heals\tHeals the player to full health  Damage may be dynamically set by adding a number Attribute called damage. ","version":"Next","tagName":"h2"},{"title":"Vines","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/vines","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Vines","url":"/kit/docs/client-objects/vines#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Vines","url":"/kit/docs/client-objects/vines#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Pushbox Destroyers","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/pushbox-destroyers","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Pushbox Destroyers","url":"/kit/docs/client-objects/pushbox-destroyers#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Pushbox Destroyers","url":"/kit/docs/client-objects/pushbox-destroyers#configuration","content":"","version":"Next","tagName":"h2"},{"title":"ClientObjects","type":0,"sectionRef":"#","url":"/kit/api/ClientObjects","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#functions","content":" ","version":null,"tagName":"h2"},{"title":"isButtonActivatedPlatform​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#isButtonActivatedPlatform","content":"shorthand &lt;/&gt; ClientObjects.isButtonActivatedPlatform(platform: Instance) → boolean This function is used to check if the provided Instance is a ButtonActivatedPlatform. This will return true if it is a BasePart and meets one of the following requirements: Is named ButtonActivatedPlatform Has a tag named ButtonActivated  ","version":null,"tagName":"h3"},{"title":"isBalloon​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#isBalloon","content":"shorthand &lt;/&gt; ClientObjects.isBalloon( parent: Instance, doNotCheckAncestor: boolean? ) → boolean This function is used to check if the provided Instance is part of a dispensed Balloon. This will return true if it meets one of the following requirements: Is named BalloonModel If doNotCheckAncestor is not true and the Instance has an ancestor named BalloonModel   ","version":null,"tagName":"h3"},{"title":"isTurret​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#isTurret","content":"shorthand &lt;/&gt; ClientObjects.isTurret( parent: Instance, doNotCheckAncestor: boolean? ) → boolean This function is used to check if the provided Instance is part of a Turret's bullet. This will return true if it meets one of the following requirements: Is named Bullet If doNotCheckAncestor is not true and the Instance has an ancestor named Bullet   ","version":null,"tagName":"h3"},{"title":"isPushbox​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#isPushbox","content":"shorthand &lt;/&gt; ClientObjects.isPushbox( parent: Instance, doNotCheckAncestor: boolean? ) → boolean This function is used to check if the provided Instance is part of a Pushbox. This will return true if it meets one of the following requirements: Is named Pushbox Has a tag named IsBox If doNotCheckAncestor is not true and the Instance has an ancestor named Pushbox   ","version":null,"tagName":"h3"},{"title":"evaluateToucher​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#evaluateToucher","content":"&lt;/&gt; ClientObjects.evaluateToucher( part: BasePart , toucher: BasePart , config: (Instance | typeof(Config.TOUCH_CONFIG))? ) → boolean This function checks if two BaseParts (part and toucher) touching is considered valid or not, based on the provided config. A touch configuration has the following settings: player: Valid if toucher is part of the player's character pushbox: Valid if ClientObjects.isPushbox returns true balloon: Valid if ClientObjects.isBalloon returns true turret: Valid if ClientObjects.isTurret returns true colorSpecific: For every setting except player, toucher's color must match part's color for the collision to be considered valid.   ","version":null,"tagName":"h3"},{"title":"bindToFlip​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#bindToFlip","content":"&lt;/&gt; ClientObjects.bindToFlip( part: BasePart , callback: () → () ) → () → () Binds the callback function to the part, executing the callback when the player performs a corner flip on it.  ","version":null,"tagName":"h3"},{"title":"isInstanceActive​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#isInstanceActive","content":"&lt;/&gt; ClientObjects.isInstanceActive( scope: Scope, instance: Instance, ignoreList: {[string]: boolean}? ) → boolean Returns whether the provided Instance is active or not. TODO explain more  ","version":null,"tagName":"h3"},{"title":"listenInstanceActive​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#listenInstanceActive","content":"&lt;/&gt; ClientObjects.listenInstanceActive( scope: Scope, instance: Instance, ignoreList: {[string]: boolean}?, callback: (active: boolean) → () ) → () → () Listens to the Instance's activeness, executing the callback when it's activeness changes.  ","version":null,"tagName":"h3"},{"title":"setInstanceActive​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#setInstanceActive","content":"&lt;/&gt; ClientObjects.setInstanceActive( scope: Scope, instance: Instance, key: string, active: boolean ) → () Sets the Instance's activeness based on active. Instances can have multiple activeness states, dictated by the key parameter.  ","version":null,"tagName":"h3"},{"title":"scanFolder​","type":1,"pageTitle":"ClientObjects","url":"/kit/api/ClientObjects#scanFolder","content":"&lt;/&gt; ClientObjects.scanFolder( targetScope: Scope, path: Instance, doNotIgnoreObjects: boolean?, targetPath: Instance? ) → () TODO explain this (idk the specifics of what it does) ","version":null,"tagName":"h3"},{"title":"Trip Parts","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/trip-parts","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Trip Parts","url":"/kit/docs/client-objects/trip-parts#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Trip Parts","url":"/kit/docs/client-objects/trip-parts#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Property Changers","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/property-changers","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Property Changers","url":"/kit/docs/client-objects/property-changers#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Property Changers","url":"/kit/docs/client-objects/property-changers#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Vanishers","type":0,"sectionRef":"#","url":"/kit/docs/client-objects/vanishers","content":"","keywords":"","version":"Next"},{"title":"Use Cases​","type":1,"pageTitle":"Vanishers","url":"/kit/docs/client-objects/vanishers#use-cases","content":" ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Vanishers","url":"/kit/docs/client-objects/vanishers#configuration","content":"","version":"Next","tagName":"h2"},{"title":"Overview","type":0,"sectionRef":"#","url":"/kit/docs/intro","content":"Overview","keywords":"","version":"Next"}],"options":{"id":"default"}}